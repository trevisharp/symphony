compiler SymphonyCompiler {
	
	contextual {
		/key/
	}

	identity /[A-Za-z_][A-Za-z_0-9]*/

	key {
		EXPRESSION = //.*?//
	}

	rule {
		identityKey = /identity/ EXPRESSION

		key = /key/ identity /=/ EXPRESSION
		keyBlock = /key/ /{/ (identity /=/ EXPRESSION)* /}/

		contextual = /contextual/ EXPRESSION
		contextualBlock = /contextual/ /{/ (EXPRESSION)* /}/

		compilerItem = [ identityKey key keyBlock contextual contextualBlock ]
		compilerBody = compilerItem*
		compilerDef = /compiler/ identity /{/ compilerBody /}/
	}

	start rule program
}